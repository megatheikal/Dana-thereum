{"ast":null,"code":"import _regeneratorRuntime from \"/home/m00m/Blockhainlearn/fyp/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/m00m/Blockhainlearn/fyp/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/m00m/Blockhainlearn/fyp/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/m00m/Blockhainlearn/fyp/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/m00m/Blockhainlearn/fyp/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/m00m/Blockhainlearn/fyp/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/m00m/Blockhainlearn/fyp/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/m00m/Blockhainlearn/fyp/components/view/detail.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Form, Checkbox, Button, Card } from \"semantic-ui-react\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\n\nvar Detail = /*#__PURE__*/function (_Component) {\n  _inherits(Detail, _Component);\n\n  var _super = _createSuper(Detail);\n\n  function Detail() {\n    _classCallCheck(this, Detail);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Detail, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          minimumContribution = _this$props.minimumContribution,\n          balance = _this$props.balance,\n          approversCount = _this$props.approversCount,\n          organiser = _this$props.organiser;\n      var items = [{\n        header: organiser,\n        meta: \"Address of organiser\",\n        description: \"The organiser that created this campaign\",\n        style: {\n          overflowWrap: \"break-word\"\n        }\n      }, {\n        header: minimumContribution,\n        meta: \"Minimum Contribution (wei)\",\n        description: \"You must contribute atleast this much to become an approver\"\n      }, {\n        header: approversCount,\n        meta: \"Number of approvers\",\n        description: \"Number of people who have already donated to this campaign.\"\n      }, {\n        header: balance,\n        meta: \"Campaign Balance (ethers)\",\n        description: \"The balance remains in the campaign.\"\n      }];\n      return __jsx(Card.Group, {\n        items: items,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.minimumContribution);\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 12\n        }\n      }, this.renderCards());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaign = Campaign(this.props.address);\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                return _context.abrupt(\"return\", {\n                  address: this.props.lain,\n                  minimumContribution: summary[0],\n                  balance: summary[1],\n                  approversCount: summary[2],\n                  organiser: summary[3]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Detail;\n}(Component);\n\nexport default Detail;","map":{"version":3,"sources":["/home/m00m/Blockhainlearn/fyp/components/view/detail.js"],"names":["React","Component","Form","Checkbox","Button","Card","Campaign","web3","Detail","props","minimumContribution","balance","approversCount","organiser","items","header","meta","description","style","overflowWrap","console","log","renderCards","campaign","address","methods","getSummary","call","summary","lain"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,IAAjC,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;IAEMC,M;;;;;;;;;;;;;kCAYU;AAAA,wBAMR,KAAKC,KANG;AAAA,UAEVC,mBAFU,eAEVA,mBAFU;AAAA,UAGVC,OAHU,eAGVA,OAHU;AAAA,UAIVC,cAJU,eAIVA,cAJU;AAAA,UAKVC,SALU,eAKVA,SALU;AAQZ,UAAMC,KAAK,GAAG,CACZ;AACEC,QAAAA,MAAM,EAAEF,SADV;AAEEG,QAAAA,IAAI,EAAE,sBAFR;AAGEC,QAAAA,WAAW,EAAE,0CAHf;AAIEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB;AAJT,OADY,EAOZ;AACEJ,QAAAA,MAAM,EAAEL,mBADV;AAEEM,QAAAA,IAAI,EAAE,4BAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OAPY,EAcZ;AACEF,QAAAA,MAAM,EAAEH,cADV;AAEEI,QAAAA,IAAI,EAAE,qBAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OAdY,EAoBZ;AACEF,QAAAA,MAAM,EAAEJ,OADV;AAEEK,QAAAA,IAAI,EAAE,2BAFR;AAGEC,QAAAA,WAAW,EAAE;AAHf,OApBY,CAAd;AA2BA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEH,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;6BACQ;AACPM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,mBAAvB;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKY,WAAL,EAAN,CAAP;AACD;;;;uGAnD4Bb,K;;;;;;AACrBc,gBAAAA,Q,GAAWjB,QAAQ,CAAC,KAAKG,KAAL,CAAWe,OAAZ,C;;uBACHD,QAAQ,CAACE,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,E;;;AAAhBC,gBAAAA,O;iDACC;AACLJ,kBAAAA,OAAO,EAAE,KAAKf,KAAL,CAAWoB,IADf;AAELnB,kBAAAA,mBAAmB,EAAEkB,OAAO,CAAC,CAAD,CAFvB;AAGLjB,kBAAAA,OAAO,EAAEiB,OAAO,CAAC,CAAD,CAHX;AAILhB,kBAAAA,cAAc,EAAEgB,OAAO,CAAC,CAAD,CAJlB;AAKLf,kBAAAA,SAAS,EAAEe,OAAO,CAAC,CAAD;AALb,iB;;;;;;;;;;;;;;;;;;;EAJU3B,S;;AAuDrB,eAAeO,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Checkbox, Button, Card } from \"semantic-ui-react\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\n\nclass Detail extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(this.props.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      address: this.props.lain,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      approversCount: summary[2],\n      organiser: summary[3]\n    };\n  }\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      approversCount,\n      organiser\n    } = this.props;\n\n    const items = [\n      {\n        header: organiser,\n        meta: \"Address of organiser\",\n        description: \"The organiser that created this campaign\",\n        style: { overflowWrap: \"break-word\" }\n      },\n      {\n        header: minimumContribution,\n        meta: \"Minimum Contribution (wei)\",\n        description:\n          \"You must contribute atleast this much to become an approver\"\n      },\n\n      {\n        header: approversCount,\n        meta: \"Number of approvers\",\n        description:\n          \"Number of people who have already donated to this campaign.\"\n      },\n      {\n        header: balance,\n        meta: \"Campaign Balance (ethers)\",\n        description: \"The balance remains in the campaign.\"\n      }\n    ];\n\n    return <Card.Group items={items} />;\n  }\n  render() {\n    console.log(this.props.minimumContribution);\n    return <div>{this.renderCards()}</div>;\n  }\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}