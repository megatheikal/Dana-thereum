{"ast":null,"code":"var _jsxFileName = \"/home/m00m/Blockhainlearn/fyp/components/view/detail.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Form, Checkbox, Button, Card } from \"semantic-ui-react\";\nimport Campaign from \"../../ethereum/campaign\";\n\nclass Detail extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      address: props.query.address,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      requestCount,\n      approversCount,\n      manager\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: \"Address of Manager\",\n      description: \"The Manager who created this campaign, Manager can create requests to withdraw money.\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: minimumContribution,\n      meta: \"Minimum Contribution (wei)\",\n      description: \"You must contribute atleast this much to become an approver\"\n    }, {\n      header: requestCount,\n      meta: \"Number of requests\",\n      description: \"A request tries to withdraw money from the contract. Requests must be approved by approvers( or contributers)\"\n    }, {\n      header: approversCount,\n      meta: \"Number of approvers\",\n      description: \"Number of people who have already donated to this campaign.\"\n    }, {\n      header: web3.utils.fromWei(balance, \"ether\"),\n      meta: \"Campaign Balance (ethers)\",\n      description: \"The balance is how much money this campaign has to spend.\"\n    }];\n    return __jsx(Card.Group, {\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"hihih\"));\n  }\n\n}\n\nexport default Detail;","map":{"version":3,"sources":["/home/m00m/Blockhainlearn/fyp/components/view/detail.js"],"names":["React","Component","Form","Checkbox","Button","Card","Campaign","Detail","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","minimumContribution","balance","requestCount","approversCount","manager","renderCards","items","header","meta","description","style","overflowWrap","web3","utils","fromWei","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,IAAjC,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAC7B,eAAaO,eAAb,CAA6BC,KAA7B,EAAoC;AAClC,UAAMC,QAAQ,GAAGJ,QAAQ,CAACG,KAAK,CAACE,KAAN,CAAYC,OAAb,CAAzB;AACA,UAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AACA,WAAO;AACLJ,MAAAA,OAAO,EAAEH,KAAK,CAACE,KAAN,CAAYC,OADhB;AAELK,MAAAA,mBAAmB,EAAEJ,OAAO,CAAC,CAAD,CAFvB;AAGLK,MAAAA,OAAO,EAAEL,OAAO,CAAC,CAAD,CAHX;AAILM,MAAAA,YAAY,EAAEN,OAAO,CAAC,CAAD,CAJhB;AAKLO,MAAAA,cAAc,EAAEP,OAAO,CAAC,CAAD,CALlB;AAMLQ,MAAAA,OAAO,EAAER,OAAO,CAAC,CAAD;AANX,KAAP;AAQD;;AACDS,EAAAA,WAAW,GAAG;AACZ,UAAM;AACJL,MAAAA,mBADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,YAHI;AAIJC,MAAAA,cAJI;AAKJC,MAAAA;AALI,QAMF,KAAKZ,KANT;AAQA,UAAMc,KAAK,GAAG,CACZ;AACEC,MAAAA,MAAM,EAAEH,OADV;AAEEI,MAAAA,IAAI,EAAE,oBAFR;AAGEC,MAAAA,WAAW,EACT,uFAJJ;AAKEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AALT,KADY,EAQZ;AACEJ,MAAAA,MAAM,EAAEP,mBADV;AAEEQ,MAAAA,IAAI,EAAE,4BAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KARY,EAcZ;AACEF,MAAAA,MAAM,EAAEL,YADV;AAEEM,MAAAA,IAAI,EAAE,oBAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KAdY,EAoBZ;AACEF,MAAAA,MAAM,EAAEJ,cADV;AAEEK,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KApBY,EA0BZ;AACEF,MAAAA,MAAM,EAAEK,IAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBb,OAAnB,EAA4B,OAA5B,CADV;AAEEO,MAAAA,IAAI,EAAE,2BAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KA1BY,CAAd;AAiCA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACDS,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKD;;AA/D4B;;AAkE/B,eAAezB,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Checkbox, Button, Card } from \"semantic-ui-react\";\nimport Campaign from \"../../ethereum/campaign\";\n\nclass Detail extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      address: props.query.address,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      requestCount,\n      approversCount,\n      manager\n    } = this.props;\n\n    const items = [\n      {\n        header: manager,\n        meta: \"Address of Manager\",\n        description:\n          \"The Manager who created this campaign, Manager can create requests to withdraw money.\",\n        style: { overflowWrap: \"break-word\" }\n      },\n      {\n        header: minimumContribution,\n        meta: \"Minimum Contribution (wei)\",\n        description:\n          \"You must contribute atleast this much to become an approver\"\n      },\n      {\n        header: requestCount,\n        meta: \"Number of requests\",\n        description:\n          \"A request tries to withdraw money from the contract. Requests must be approved by approvers( or contributers)\"\n      },\n      {\n        header: approversCount,\n        meta: \"Number of approvers\",\n        description:\n          \"Number of people who have already donated to this campaign.\"\n      },\n      {\n        header: web3.utils.fromWei(balance, \"ether\"),\n        meta: \"Campaign Balance (ethers)\",\n        description: \"The balance is how much money this campaign has to spend.\"\n      }\n    ];\n\n    return <Card.Group items={items} />;\n  }\n  render() {\n    return (\n      <div>\n        <h1>hihih</h1>\n      </div>\n    );\n  }\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}