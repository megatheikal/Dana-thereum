{"ast":null,"code":"var _jsxFileName = \"/home/m00m/Blockhainlearn/fyp/components/DonateForm.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nclass DonateForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      donation: \"\",\n      loading: false,\n      errorMessage: \"\"\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const campaign = Campaign(this.props.address);\n      this.setState({\n        loading: true,\n        errorMessage: \"\"\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.donate().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.donation, \"ether\")\n        });\n      } catch (error) {\n        this.setState({\n          errorMessage: error.message\n        });\n      }\n\n      this.setState({\n        loading: false,\n        donation: \"\"\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      style: {\n        fontSize: \"17px\",\n        marginTop: \"30px\"\n      },\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"Amount to donate\"), __jsx(Input, {\n      value: this.state.donation,\n      label: \"ether\",\n      labelPosition: \"right\",\n      style: {\n        borderRadius: \"17px\"\n      },\n      onChange: event => this.setState({\n        donation: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    })), __jsx(Button, {\n      content: \"Donate\",\n      style: {\n        backgroundColor: \"#c6a551\",\n        borderRadius: \"61px\",\n        width: \"300px\"\n      },\n      loading: this.state.loading,\n      size: \"huge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), __jsx(Message, {\n      header: \"Sorry...\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default DonateForm;","map":{"version":3,"sources":["/home/m00m/Blockhainlearn/fyp/components/DonateForm.js"],"names":["React","Component","Form","Button","Input","Message","web3","Campaign","DonateForm","donation","loading","errorMessage","event","preventDefault","campaign","props","address","setState","accounts","eth","getAccounts","methods","donate","send","from","value","utils","toWei","state","error","message","render","fontSize","marginTop","onSubmit","borderRadius","target","backgroundColor","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nclass DonateForm extends Component {\n  state = {\n    donation: \"\",\n    loading: false,\n    errorMessage: \"\"\n  };\n\n  onSubmit = async event => {\n    event.preventDefault();\n    const campaign = Campaign(this.props.address);\n\n    this.setState({ loading: true, errorMessage: \"\" });\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.donate().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.donation, \"ether\")\n      });\n    } catch (error) {\n      this.setState({ errorMessage: error.message });\n    }\n    this.setState({ loading: false, donation: \"\" });\n  };\n  render() {\n    return (\n      <Form\n        style={{ fontSize: \"17px\", marginTop: \"30px\" }}\n        onSubmit={this.onSubmit}\n      >\n        <Form.Field>\n          <label>Amount to donate</label>\n          <Input\n            value={this.state.donation}\n            label=\"ether\"\n            labelPosition=\"right\"\n            style={{ borderRadius: \"17px\" }}\n            onChange={event => this.setState({ donation: event.target.value })}\n          />\n        </Form.Field>\n\n        <Button\n          content=\"Donate\"\n          style={{\n            backgroundColor: \"#c6a551\",\n            borderRadius: \"61px\",\n            width: \"300px\"\n          }}\n          loading={this.state.loading}\n          size=\"huge\"\n        />\n        <Message header=\"Sorry...\" content={this.state.errorMessage} />\n      </Form>\n    );\n  }\n}\n\nexport default DonateForm;\n"]},"metadata":{},"sourceType":"module"}