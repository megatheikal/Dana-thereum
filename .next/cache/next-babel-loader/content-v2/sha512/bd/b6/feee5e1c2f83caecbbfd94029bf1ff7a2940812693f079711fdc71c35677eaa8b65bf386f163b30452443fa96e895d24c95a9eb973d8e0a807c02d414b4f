{"ast":null,"code":"var _jsxFileName = \"/home/m00m/Blockhainlearn/fyp/pages/campaigns/requests/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Link } from \"../../../routes\";\nimport { Form, Button, Message, Table } from \"semantic-ui-react\";\nimport Campaign from \"../../../ethereum/campaign\";\nimport web3 from \"../../../ethereum/web3\";\n\nclass RequestIndex extends Component {\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    const campaign = Campaign(address);\n    const requestCount = await campaign.methods.getSummary().call();\n    const donaterCount = await campaign.methods.donaterCount().call();\n    const requests = await Promise.all(Array(parseInt(requestCount)).fill().map((element, index) => {\n      return campaign.methods.requests(index).call();\n    }));\n    return {\n      campaign,\n      address,\n      requests,\n      nasi: requestCount[3],\n      donaterCount\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, __jsx(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, \"ID\"), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, \"Description\"), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, \"Amount\"), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, \"Recipient\"), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, \"Approval Count\"), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, \"Approve\"), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, \"Finalize\")))), __jsx(Link, {\n      route: `/campaigns/${this.props.address}/requests/new`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      content: \"Add Request\",\n      primary: true,\n      floated: \"right\",\n      style: {\n        borderRadius: \"61px\",\n        width: \"200px\"\n      },\n      size: \"big\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default RequestIndex;","map":{"version":3,"sources":["/home/m00m/Blockhainlearn/fyp/pages/campaigns/requests/index.js"],"names":["React","Component","Link","Form","Button","Message","Table","Campaign","web3","RequestIndex","getInitialProps","props","address","query","campaign","requestCount","methods","getSummary","call","donaterCount","requests","Promise","all","Array","parseInt","fill","map","element","index","nasi","render","borderRadius","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"../../../routes\";\nimport { Form, Button, Message, Table } from \"semantic-ui-react\";\nimport Campaign from \"../../../ethereum/campaign\";\nimport web3 from \"../../../ethereum/web3\";\n\nclass RequestIndex extends Component {\n  static async getInitialProps(props) {\n    const { address } = props.query;\n    const campaign = Campaign(address);\n    const requestCount = await campaign.methods.getSummary().call();\n    const donaterCount = await campaign.methods.donaterCount().call();\n\n    const requests = await Promise.all(\n      Array(parseInt(requestCount))\n        .fill()\n        .map((element, index) => {\n          return campaign.methods.requests(index).call();\n        })\n    );\n    return { campaign, address, requests, nasi: requestCount[3], donaterCount };\n  }\n  render() {\n    return (\n      <div>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>ID</Table.HeaderCell>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Amount</Table.HeaderCell>\n              <Table.HeaderCell>Recipient</Table.HeaderCell>\n              <Table.HeaderCell>Approval Count</Table.HeaderCell>\n              <Table.HeaderCell>Approve</Table.HeaderCell>\n              <Table.HeaderCell>Finalize</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n        </Table>\n        <Link route={`/campaigns/${this.props.address}/requests/new`}>\n          <a>\n            <Button\n              content=\"Add Request\"\n              primary\n              floated=\"right\"\n              style={{\n                borderRadius: \"61px\",\n                width: \"200px\"\n              }}\n              size=\"big\"\n            />\n          </a>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default RequestIndex;\n"]},"metadata":{},"sourceType":"module"}