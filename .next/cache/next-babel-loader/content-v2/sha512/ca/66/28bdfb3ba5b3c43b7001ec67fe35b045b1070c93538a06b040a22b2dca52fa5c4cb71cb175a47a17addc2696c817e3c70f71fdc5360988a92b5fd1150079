{"ast":null,"code":"var _jsxFileName = \"/home/m00m/Blockhainlearn/fyp/components/view/detail.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Form, Checkbox, Button, Card } from \"semantic-ui-react\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\n\nclass Detail extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(this.props.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      address: this.props.lain,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      approversCount: summary[2],\n      organiser: summary[3]\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      approversCount,\n      organiser\n    } = this.props;\n    const items = [{\n      header: organiser,\n      meta: \"Address of organiser\",\n      description: \"The organiser that created this campaign\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: minimumContribution,\n      meta: \"Minimum Contribution (wei)\",\n      description: \"You must contribute atleast this much to become an approver\"\n    }, {\n      header: approversCount,\n      meta: \"Number of approvers\",\n      description: \"Number of people who have already donated to this campaign.\"\n    }, {\n      header: balance,\n      meta: \"Campaign Balance (ethers)\",\n      description: \"The balance remains in the campaign.\"\n    }];\n    return __jsx(Card.Group, {\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    });\n  }\n\n  render() {\n    console.log(this.props.organiser);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    }, this.renderCards());\n  }\n\n}\n\nexport default Detail;","map":{"version":3,"sources":["/home/m00m/Blockhainlearn/fyp/components/view/detail.js"],"names":["React","Component","Form","Checkbox","Button","Card","Campaign","web3","Detail","getInitialProps","props","campaign","address","summary","methods","getSummary","call","lain","minimumContribution","balance","approversCount","organiser","renderCards","items","header","meta","description","style","overflowWrap","render","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,IAAjC,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAC7B,eAAaQ,eAAb,CAA6BC,KAA7B,EAAoC;AAClC,UAAMC,QAAQ,GAAGL,QAAQ,CAAC,KAAKI,KAAL,CAAWE,OAAZ,CAAzB;AACA,UAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AACA,WAAO;AACLJ,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWO,IADf;AAELC,MAAAA,mBAAmB,EAAEL,OAAO,CAAC,CAAD,CAFvB;AAGLM,MAAAA,OAAO,EAAEN,OAAO,CAAC,CAAD,CAHX;AAILO,MAAAA,cAAc,EAAEP,OAAO,CAAC,CAAD,CAJlB;AAKLQ,MAAAA,SAAS,EAAER,OAAO,CAAC,CAAD;AALb,KAAP;AAOD;;AACDS,EAAAA,WAAW,GAAG;AACZ,UAAM;AACJJ,MAAAA,mBADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,cAHI;AAIJC,MAAAA;AAJI,QAKF,KAAKX,KALT;AAOA,UAAMa,KAAK,GAAG,CACZ;AACEC,MAAAA,MAAM,EAAEH,SADV;AAEEI,MAAAA,IAAI,EAAE,sBAFR;AAGEC,MAAAA,WAAW,EAAE,0CAHf;AAIEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAJT,KADY,EAOZ;AACEJ,MAAAA,MAAM,EAAEN,mBADV;AAEEO,MAAAA,IAAI,EAAE,4BAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KAPY,EAcZ;AACEF,MAAAA,MAAM,EAAEJ,cADV;AAEEK,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KAdY,EAoBZ;AACEF,MAAAA,MAAM,EAAEL,OADV;AAEEM,MAAAA,IAAI,EAAE,2BAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KApBY,CAAd;AA2BA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACDM,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWW,SAAvB;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKC,WAAL,EAAN,CAAP;AACD;;AApD4B;;AAuD/B,eAAed,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Checkbox, Button, Card } from \"semantic-ui-react\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\n\nclass Detail extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(this.props.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      address: this.props.lain,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      approversCount: summary[2],\n      organiser: summary[3]\n    };\n  }\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      approversCount,\n      organiser\n    } = this.props;\n\n    const items = [\n      {\n        header: organiser,\n        meta: \"Address of organiser\",\n        description: \"The organiser that created this campaign\",\n        style: { overflowWrap: \"break-word\" }\n      },\n      {\n        header: minimumContribution,\n        meta: \"Minimum Contribution (wei)\",\n        description:\n          \"You must contribute atleast this much to become an approver\"\n      },\n\n      {\n        header: approversCount,\n        meta: \"Number of approvers\",\n        description:\n          \"Number of people who have already donated to this campaign.\"\n      },\n      {\n        header: balance,\n        meta: \"Campaign Balance (ethers)\",\n        description: \"The balance remains in the campaign.\"\n      }\n    ];\n\n    return <Card.Group items={items} />;\n  }\n  render() {\n    console.log(this.props.organiser);\n    return <div>{this.renderCards()}</div>;\n  }\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}