{"ast":null,"code":"var _jsxFileName = \"/home/m00m/Blockhainlearn/fyp/components/RequestRow.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nclass RequestRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onApprove\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approveRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n\n    _defineProperty(this, \"onFinalize\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.finaliseRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    const {\n      request,\n      id,\n      approversCount\n    } = this.props;\n    const readyToFinalize = request.approvalCount > approversCount / 2;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, __jsx(Table.Row, {\n      disabled: request.complete,\n      positive: !!readyToFinalize && !request.complete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, id), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, request.description), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, web3.utils.fromWei(request.value, \"ether\")), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, request.recipient), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, request.approvalCount, \"/\", approversCount), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, request.complete ? null : __jsx(Button, {\n      color: \"green\",\n      basic: true,\n      onClick: this.onApprove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, \"Approve\")), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, request.complete ? null : __jsx(Button, {\n      color: \"teal\",\n      basic: true,\n      onClick: this.onFinalize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"Finalize\"))));\n  }\n\n}\n\nexport default RequestRow;","map":{"version":3,"sources":["/home/m00m/Blockhainlearn/fyp/components/RequestRow.js"],"names":["React","Component","Table","Button","web3","Campaign","RequestRow","campaign","props","address","accounts","eth","getAccounts","methods","approveRequest","id","send","from","finaliseRequest","render","request","approversCount","readyToFinalize","approvalCount","complete","description","utils","fromWei","value","recipient","onApprove","onFinalize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nclass RequestRow extends Component {\n  onApprove = async () => {\n    const campaign = Campaign(this.props.address);\n    const accounts = await web3.eth.getAccounts();\n    await campaign.methods\n      .approveRequest(this.props.id)\n      .send({ from: accounts[0] });\n  };\n\n  onFinalize = async () => {\n    const campaign = Campaign(this.props.address);\n    const accounts = await web3.eth.getAccounts();\n    await campaign.methods\n      .finaliseRequest(this.props.id)\n      .send({ from: accounts[0] });\n  };\n  render() {\n    const { request, id, approversCount } = this.props;\n    const readyToFinalize = request.approvalCount > approversCount / 2;\n    return (\n      <div>\n        <Table.Row\n          disabled={request.complete}\n          positive={!!readyToFinalize && !request.complete}\n        >\n          <Table.Cell>{id}</Table.Cell>\n          <Table.Cell>{request.description}</Table.Cell>\n          <Table.Cell>{web3.utils.fromWei(request.value, \"ether\")}</Table.Cell>\n          <Table.Cell>{request.recipient}</Table.Cell>\n          <Table.Cell>\n            {request.approvalCount}/{approversCount}\n          </Table.Cell>\n          <Table.Cell>\n            {request.complete ? null : (\n              <Button color=\"green\" basic onClick={this.onApprove}>\n                Approve\n              </Button>\n            )}\n          </Table.Cell>\n          <Table.Cell>\n            {request.complete ? null : (\n              <Button color=\"teal\" basic onClick={this.onFinalize}>\n                Finalize\n              </Button>\n            )}\n          </Table.Cell>\n        </Table.Row>\n      </div>\n    );\n  }\n}\n\nexport default RequestRow;\n"]},"metadata":{},"sourceType":"module"}