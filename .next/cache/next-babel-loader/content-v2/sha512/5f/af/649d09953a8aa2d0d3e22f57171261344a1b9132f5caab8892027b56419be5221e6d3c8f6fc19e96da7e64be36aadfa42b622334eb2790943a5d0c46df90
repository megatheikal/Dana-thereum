{"ast":null,"code":"var _jsxFileName = \"/home/m00m/Blockhainlearn/fyp/pages/campaigns/new.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Form, Grid, Menu, Tab } from \"semantic-ui-react\";\nimport { form, box, change, pane } from \"../../styles/form.module.css\";\nimport ReferenceForm from \"../../components/form/Reference\";\nimport CampaignDetailForm from \"../../components/form/Campaign\";\nimport OrganizerForm from \"../../components/form/Organizer\";\nimport SubmitForm from \"../../components/form/Submit\";\nimport factory from \"../../ethereum/factory\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass CampaignNew extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      errorMessage: \"\",\n      minimum: \"\",\n      loading: false,\n      nameOrganizer: \"\",\n      agencyOrganizer: \"\",\n      phoneOrganizer: \"\",\n      addressOrganizer: \"\",\n      emailOrganizer: \"\",\n      linkOrganizer: \"\",\n      nameReference: \"\",\n      phoneReference: \"\",\n      addressReference: \"\",\n      emailReference: \"\",\n      linkReference: \"\",\n      campaignName: \"\",\n      campaignMinimum: \"\",\n      campaignTarget: \"\",\n      campaignSummary: \"\"\n    });\n\n    _defineProperty(this, \"handleChangeValue\", e => this.setState({\n      campaignMinimum: e.target.value\n    }));\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: \"\"\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        const nameOrganizer = this.state.nameOrganizer;\n        const agencyOrganizer = this.state.agencyOrganizer;\n        const phoneOrganizer = this.state.phoneOrganizer;\n        const addressOrganizer = this.state.addressOrganizer;\n        const emailOrganizer = this.state.emailOrganizer;\n        const linkOrganizer = this.state.linkOrganizer;\n        const nameReference = this.state.nameReference;\n        const phoneReference = this.state.phoneReference;\n        const addressReference = this.state.addressReference;\n        const emailReference = this.state.emailReference;\n        const linkReference = this.state.linkReference;\n        const campaignName = this.state.campaignName;\n        const campaignTarget = this.state.campaignTarget;\n        const campaignSummary = this.state.campaignSummary;\n        const campaignMinimum = this.state.campaignMinimum;\n        await factory.methods.createCampaign(campaignMinimum).send({\n          from: accounts[0]\n        });\n        const lastDeployedCampaign = await factory.methods.getLastDeployedCampaign().call();\n        const campaign = Campaign(lastDeployedCampaign);\n        await campaign.methods.setOrganiser(nameOrganizer, agencyOrganizer, phoneOrganizer, addressOrganizer, emailOrganizer, linkOrganizer).send({\n          from: accounts[0]\n        });\n        await campaign.methods.setReference(nameReference, phoneReference, addressReference, emailReference, linkOrganizer).send({\n          from: accounts[0]\n        });\n        await campaign.methods.setDetail(nameReference, phoneReference, addressReference, emailReference, linkOrganizer).send({\n          from: accounts[0]\n        });\n        console.log(campaign.methods.getOrganiser(accounts[0]).call());\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        nameOrganizer: \"\",\n        agencyOrganizer: \"\",\n        phoneOrganizer: \"\",\n        addressOrganizer: \"\",\n        emailOrganizer: \"\",\n        linkOrganizer: \"\",\n        campaignMinimum: \"\",\n        loading: false\n      });\n      Router.pushRoute(\"/\");\n    });\n\n    this.handleForm = this.handleForm.bind(this);\n  }\n\n  handleForm(formInput) {\n    this.setState(formInput);\n  }\n\n  renderForm() {\n    const panes = [{\n      menuItem: \"Organizer Info\",\n      render: () => __jsx(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, __jsx(OrganizerForm, {\n        nameOrganizer: this.state.nameOrganizer,\n        agencyOrganizer: this.state.agencyOrganizer,\n        phoneOrganizer: this.state.phoneOrganizer,\n        addressOrganizer: this.state.addressOrganizer,\n        emailOrganizer: this.state.emailOrganizer,\n        linkOrganizer: this.state.linkOrganizer,\n        onChangeValue: this.handleForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }))\n    }, {\n      menuItem: \"Reference Info\",\n      render: () => __jsx(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, __jsx(ReferenceForm, {\n        nameReference: this.state.nameReference,\n        phoneReference: this.state.phoneReference,\n        addressReference: this.state.addressReference,\n        emailReference: this.state.emailReference,\n        linkReference: this.state.linkReference,\n        onChangeValue: this.handleForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }))\n    }, {\n      menuItem: \"Campaign Detail\",\n      render: () => __jsx(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, __jsx(CampaignDetailForm, {\n        campaignName: this.state.campaignName,\n        campaignTarget: this.state.campaignTarget,\n        campaignSummary: this.state.campaignSummary,\n        campaignMinimum: this.state.campaignMinimum,\n        onChangeValue: this.handleForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }))\n    }, {\n      menuItem: \"Submit\",\n      render: () => __jsx(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, __jsx(SubmitForm, {\n        message: this.state.errorMessage,\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }))\n    }];\n    return panes;\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      size: \"huge\",\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, __jsx(Tab, {\n      menu: {\n        fluid: true,\n        vertical: true,\n        tabular: true,\n        attached: true\n      },\n      panes: this.renderForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["/home/m00m/Blockhainlearn/fyp/pages/campaigns/new.js"],"names":["React","Component","Layout","Form","Grid","Menu","Tab","form","box","change","pane","ReferenceForm","CampaignDetailForm","OrganizerForm","SubmitForm","factory","Campaign","web3","Router","CampaignNew","constructor","props","errorMessage","minimum","loading","nameOrganizer","agencyOrganizer","phoneOrganizer","addressOrganizer","emailOrganizer","linkOrganizer","nameReference","phoneReference","addressReference","emailReference","linkReference","campaignName","campaignMinimum","campaignTarget","campaignSummary","e","setState","target","value","event","preventDefault","accounts","eth","getAccounts","state","methods","createCampaign","send","from","lastDeployedCampaign","getLastDeployedCampaign","call","campaign","setOrganiser","setReference","setDetail","console","log","getOrganiser","err","message","pushRoute","handleForm","bind","formInput","renderForm","panes","menuItem","render","onSubmit","fluid","vertical","tabular","attached"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,mBAAtC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,EAA4BC,IAA5B,QAAwC,8BAAxC;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,MAAMC,WAAN,SAA0BlB,SAA1B,CAAoC;AAClCmB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,mCAIX;AACNC,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,OAAO,EAAE,KAHH;AAINC,MAAAA,aAAa,EAAE,EAJT;AAKNC,MAAAA,eAAe,EAAE,EALX;AAMNC,MAAAA,cAAc,EAAE,EANV;AAONC,MAAAA,gBAAgB,EAAE,EAPZ;AAQNC,MAAAA,cAAc,EAAE,EARV;AASNC,MAAAA,aAAa,EAAE,EATT;AAUNC,MAAAA,aAAa,EAAE,EAVT;AAWNC,MAAAA,cAAc,EAAE,EAXV;AAYNC,MAAAA,gBAAgB,EAAE,EAZZ;AAaNC,MAAAA,cAAc,EAAE,EAbV;AAcNC,MAAAA,aAAa,EAAE,EAdT;AAeNC,MAAAA,YAAY,EAAE,EAfR;AAgBNC,MAAAA,eAAe,EAAE,EAhBX;AAiBNC,MAAAA,cAAc,EAAE,EAjBV;AAkBNC,MAAAA,eAAe,EAAE;AAlBX,KAJW;;AAAA,+CAyBCC,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEJ,MAAAA,eAAe,EAAEG,CAAC,CAACE,MAAF,CAASC;AAA5B,KAAd,CAzBN;;AAAA,sCA6FR,MAAMC,KAAN,IAAe;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKJ,QAAL,CAAc;AAAEjB,QAAAA,OAAO,EAAE,IAAX;AAAiBF,QAAAA,YAAY,EAAE;AAA/B,OAAd;;AAEA,UAAI;AACF,cAAMwB,QAAQ,GAAG,MAAM7B,IAAI,CAAC8B,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMvB,aAAa,GAAG,KAAKwB,KAAL,CAAWxB,aAAjC;AACA,cAAMC,eAAe,GAAG,KAAKuB,KAAL,CAAWvB,eAAnC;AACA,cAAMC,cAAc,GAAG,KAAKsB,KAAL,CAAWtB,cAAlC;AACA,cAAMC,gBAAgB,GAAG,KAAKqB,KAAL,CAAWrB,gBAApC;AACA,cAAMC,cAAc,GAAG,KAAKoB,KAAL,CAAWpB,cAAlC;AACA,cAAMC,aAAa,GAAG,KAAKmB,KAAL,CAAWnB,aAAjC;AACA,cAAMC,aAAa,GAAG,KAAKkB,KAAL,CAAWlB,aAAjC;AACA,cAAMC,cAAc,GAAG,KAAKiB,KAAL,CAAWjB,cAAlC;AACA,cAAMC,gBAAgB,GAAG,KAAKgB,KAAL,CAAWhB,gBAApC;AACA,cAAMC,cAAc,GAAG,KAAKe,KAAL,CAAWf,cAAlC;AACA,cAAMC,aAAa,GAAG,KAAKc,KAAL,CAAWd,aAAjC;AACA,cAAMC,YAAY,GAAG,KAAKa,KAAL,CAAWb,YAAhC;AACA,cAAME,cAAc,GAAG,KAAKW,KAAL,CAAWX,cAAlC;AACA,cAAMC,eAAe,GAAG,KAAKU,KAAL,CAAWV,eAAnC;AACA,cAAMF,eAAe,GAAG,KAAKY,KAAL,CAAWZ,eAAnC;AACA,cAAMtB,OAAO,CAACmC,OAAR,CACHC,cADG,CACYd,eADZ,EAEHe,IAFG,CAEE;AAAEC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhB,SAFF,CAAN;AAIA,cAAMQ,oBAAoB,GAAG,MAAMvC,OAAO,CAACmC,OAAR,CAChCK,uBADgC,GAEhCC,IAFgC,EAAnC;AAIA,cAAMC,QAAQ,GAAGzC,QAAQ,CAACsC,oBAAD,CAAzB;AAEA,cAAMG,QAAQ,CAACP,OAAT,CACHQ,YADG,CAEFjC,aAFE,EAGFC,eAHE,EAIFC,cAJE,EAKFC,gBALE,EAMFC,cANE,EAOFC,aAPE,EASHsB,IATG,CASE;AAAEC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhB,SATF,CAAN;AAWA,cAAMW,QAAQ,CAACP,OAAT,CACHS,YADG,CAEF5B,aAFE,EAGFC,cAHE,EAIFC,gBAJE,EAKFC,cALE,EAMFJ,aANE,EAQHsB,IARG,CAQE;AAAEC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhB,SARF,CAAN;AAUA,cAAMW,QAAQ,CAACP,OAAT,CACHU,SADG,CAEF7B,aAFE,EAGFC,cAHE,EAIFC,gBAJE,EAKFC,cALE,EAMFJ,aANE,EAQHsB,IARG,CAQE;AAAEC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhB,SARF,CAAN;AASAe,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACP,OAAT,CAAiBa,YAAjB,CAA8BjB,QAAQ,CAAC,CAAD,CAAtC,EAA2CU,IAA3C,EAAZ;AACD,OA1DD,CA0DE,OAAOQ,GAAP,EAAY;AACZ,aAAKvB,QAAL,CAAc;AAAEnB,UAAAA,YAAY,EAAE0C,GAAG,CAACC;AAApB,SAAd;AACD;;AACD,WAAKxB,QAAL,CAAc;AACZhB,QAAAA,aAAa,EAAE,EADH;AAEZC,QAAAA,eAAe,EAAE,EAFL;AAGZC,QAAAA,cAAc,EAAE,EAHJ;AAIZC,QAAAA,gBAAgB,EAAE,EAJN;AAKZC,QAAAA,cAAc,EAAE,EALJ;AAMZC,QAAAA,aAAa,EAAE,EANH;AAOZO,QAAAA,eAAe,EAAE,EAPL;AAQZb,QAAAA,OAAO,EAAE;AARG,OAAd;AAUAN,MAAAA,MAAM,CAACgD,SAAP,CAAiB,GAAjB;AACD,KAzKkB;;AAEjB,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAuBDD,EAAAA,UAAU,CAACE,SAAD,EAAY;AACpB,SAAK5B,QAAL,CAAc4B,SAAd;AACD;;AAEDC,EAAAA,UAAU,GAAG;AACX,UAAMC,KAAK,GAAG,CACZ;AACEC,MAAAA,QAAQ,EAAE,gBADZ;AAEEC,MAAAA,MAAM,EAAE,MACN,MAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,aAAD;AACE,QAAA,aAAa,EAAE,KAAKxB,KAAL,CAAWxB,aAD5B;AAEE,QAAA,eAAe,EAAE,KAAKwB,KAAL,CAAWvB,eAF9B;AAGE,QAAA,cAAc,EAAE,KAAKuB,KAAL,CAAWtB,cAH7B;AAIE,QAAA,gBAAgB,EAAE,KAAKsB,KAAL,CAAWrB,gBAJ/B;AAKE,QAAA,cAAc,EAAE,KAAKqB,KAAL,CAAWpB,cAL7B;AAME,QAAA,aAAa,EAAE,KAAKoB,KAAL,CAAWnB,aAN5B;AAOE,QAAA,aAAa,EAAE,KAAKqC,UAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAHJ,KADY,EAiBZ;AACEK,MAAAA,QAAQ,EAAE,gBADZ;AAEEC,MAAAA,MAAM,EAAE,MACN,MAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,aAAD;AACE,QAAA,aAAa,EAAE,KAAKxB,KAAL,CAAWlB,aAD5B;AAEE,QAAA,cAAc,EAAE,KAAKkB,KAAL,CAAWjB,cAF7B;AAGE,QAAA,gBAAgB,EAAE,KAAKiB,KAAL,CAAWhB,gBAH/B;AAIE,QAAA,cAAc,EAAE,KAAKgB,KAAL,CAAWf,cAJ7B;AAKE,QAAA,aAAa,EAAE,KAAKe,KAAL,CAAWd,aAL5B;AAME,QAAA,aAAa,EAAE,KAAKgC,UANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAHJ,KAjBY,EAgCZ;AACEK,MAAAA,QAAQ,EAAE,iBADZ;AAEEC,MAAAA,MAAM,EAAE,MACN,MAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,kBAAD;AACE,QAAA,YAAY,EAAE,KAAKxB,KAAL,CAAWb,YAD3B;AAEE,QAAA,cAAc,EAAE,KAAKa,KAAL,CAAWX,cAF7B;AAGE,QAAA,eAAe,EAAE,KAAKW,KAAL,CAAWV,eAH9B;AAIE,QAAA,eAAe,EAAE,KAAKU,KAAL,CAAWZ,eAJ9B;AAKE,QAAA,aAAa,EAAE,KAAK8B,UALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAHJ,KAhCY,EA8CZ;AACEK,MAAAA,QAAQ,EAAE,QADZ;AAEEC,MAAAA,MAAM,EAAE,MACN,MAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AACE,QAAA,OAAO,EAAE,KAAKxB,KAAL,CAAW3B,YADtB;AAEE,QAAA,OAAO,EAAE,KAAK2B,KAAL,CAAWzB,OAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAHJ,KA9CY,CAAd;AA2DA,WAAO+C,KAAP;AACD;;AAgFDE,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAElE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAE,KAAKkE,QAFjB;AAGE,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKzB,KAAL,CAAW3B,YAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,MAAC,GAAD;AACE,MAAA,IAAI,EAAE;AACJqD,QAAAA,KAAK,EAAE,IADH;AAEJC,QAAAA,QAAQ,EAAE,IAFN;AAGJC,QAAAA,OAAO,EAAE,IAHL;AAIJC,QAAAA,QAAQ,EAAE;AAJN,OADR;AAOE,MAAA,KAAK,EAAE,KAAKR,UAAL,EAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF,CADF,CADF;AAuBD;;AApMiC;;AAuMpC,eAAenD,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Form, Grid, Menu, Tab } from \"semantic-ui-react\";\nimport { form, box, change, pane } from \"../../styles/form.module.css\";\nimport ReferenceForm from \"../../components/form/Reference\";\nimport CampaignDetailForm from \"../../components/form/Campaign\";\nimport OrganizerForm from \"../../components/form/Organizer\";\nimport SubmitForm from \"../../components/form/Submit\";\nimport factory from \"../../ethereum/factory\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass CampaignNew extends Component {\n  constructor(props) {\n    super(props);\n    this.handleForm = this.handleForm.bind(this);\n  }\n  state = {\n    errorMessage: \"\",\n    minimum: \"\",\n    loading: false,\n    nameOrganizer: \"\",\n    agencyOrganizer: \"\",\n    phoneOrganizer: \"\",\n    addressOrganizer: \"\",\n    emailOrganizer: \"\",\n    linkOrganizer: \"\",\n    nameReference: \"\",\n    phoneReference: \"\",\n    addressReference: \"\",\n    emailReference: \"\",\n    linkReference: \"\",\n    campaignName: \"\",\n    campaignMinimum: \"\",\n    campaignTarget: \"\",\n    campaignSummary: \"\"\n  };\n\n  handleChangeValue = e => this.setState({ campaignMinimum: e.target.value });\n  handleForm(formInput) {\n    this.setState(formInput);\n  }\n\n  renderForm() {\n    const panes = [\n      {\n        menuItem: \"Organizer Info\",\n        render: () => (\n          <Tab.Pane>\n            <OrganizerForm\n              nameOrganizer={this.state.nameOrganizer}\n              agencyOrganizer={this.state.agencyOrganizer}\n              phoneOrganizer={this.state.phoneOrganizer}\n              addressOrganizer={this.state.addressOrganizer}\n              emailOrganizer={this.state.emailOrganizer}\n              linkOrganizer={this.state.linkOrganizer}\n              onChangeValue={this.handleForm}\n            />\n          </Tab.Pane>\n        )\n      },\n      {\n        menuItem: \"Reference Info\",\n        render: () => (\n          <Tab.Pane>\n            <ReferenceForm\n              nameReference={this.state.nameReference}\n              phoneReference={this.state.phoneReference}\n              addressReference={this.state.addressReference}\n              emailReference={this.state.emailReference}\n              linkReference={this.state.linkReference}\n              onChangeValue={this.handleForm}\n            />\n          </Tab.Pane>\n        )\n      },\n      {\n        menuItem: \"Campaign Detail\",\n        render: () => (\n          <Tab.Pane>\n            <CampaignDetailForm\n              campaignName={this.state.campaignName}\n              campaignTarget={this.state.campaignTarget}\n              campaignSummary={this.state.campaignSummary}\n              campaignMinimum={this.state.campaignMinimum}\n              onChangeValue={this.handleForm}\n            />\n          </Tab.Pane>\n        )\n      },\n      {\n        menuItem: \"Submit\",\n        render: () => (\n          <Tab.Pane>\n            <SubmitForm\n              message={this.state.errorMessage}\n              loading={this.state.loading}\n            />\n          </Tab.Pane>\n        )\n      }\n    ];\n\n    return panes;\n  }\n\n  onSubmit = async event => {\n    event.preventDefault();\n    this.setState({ loading: true, errorMessage: \"\" });\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      const nameOrganizer = this.state.nameOrganizer;\n      const agencyOrganizer = this.state.agencyOrganizer;\n      const phoneOrganizer = this.state.phoneOrganizer;\n      const addressOrganizer = this.state.addressOrganizer;\n      const emailOrganizer = this.state.emailOrganizer;\n      const linkOrganizer = this.state.linkOrganizer;\n      const nameReference = this.state.nameReference;\n      const phoneReference = this.state.phoneReference;\n      const addressReference = this.state.addressReference;\n      const emailReference = this.state.emailReference;\n      const linkReference = this.state.linkReference;\n      const campaignName = this.state.campaignName;\n      const campaignTarget = this.state.campaignTarget;\n      const campaignSummary = this.state.campaignSummary;\n      const campaignMinimum = this.state.campaignMinimum;\n      await factory.methods\n        .createCampaign(campaignMinimum)\n        .send({ from: accounts[0] });\n\n      const lastDeployedCampaign = await factory.methods\n        .getLastDeployedCampaign()\n        .call();\n\n      const campaign = Campaign(lastDeployedCampaign);\n\n      await campaign.methods\n        .setOrganiser(\n          nameOrganizer,\n          agencyOrganizer,\n          phoneOrganizer,\n          addressOrganizer,\n          emailOrganizer,\n          linkOrganizer\n        )\n        .send({ from: accounts[0] });\n\n      await campaign.methods\n        .setReference(\n          nameReference,\n          phoneReference,\n          addressReference,\n          emailReference,\n          linkOrganizer\n        )\n        .send({ from: accounts[0] });\n\n      await campaign.methods\n        .setDetail(\n          nameReference,\n          phoneReference,\n          addressReference,\n          emailReference,\n          linkOrganizer\n        )\n        .send({ from: accounts[0] });\n      console.log(campaign.methods.getOrganiser(accounts[0]).call());\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n    this.setState({\n      nameOrganizer: \"\",\n      agencyOrganizer: \"\",\n      phoneOrganizer: \"\",\n      addressOrganizer: \"\",\n      emailOrganizer: \"\",\n      linkOrganizer: \"\",\n      campaignMinimum: \"\",\n      loading: false\n    });\n    Router.pushRoute(\"/\");\n  };\n\n  render() {\n    return (\n      <Layout>\n        <div className={form}>\n          <div className={box}>\n            <Form\n              size=\"huge\"\n              onSubmit={this.onSubmit}\n              error={!!this.state.errorMessage}\n            >\n              <Tab\n                menu={{\n                  fluid: true,\n                  vertical: true,\n                  tabular: true,\n                  attached: true\n                }}\n                panes={this.renderForm()}\n              />\n            </Form>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignNew;\n"]},"metadata":{},"sourceType":"module"}